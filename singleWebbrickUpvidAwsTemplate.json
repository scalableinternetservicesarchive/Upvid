{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Outputs": {
        "URL": {
            "Description": "The URL to the rails application.",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "AppServer",
                                "PublicDnsName"
                            ]
                        }
                    ]
                ]
            }
        }
    },
    "Parameters": {
        "AppInstanceType": {
            "AllowedValues": [
                "t1.micro",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.xlarge",
                "m3.2xlarge"
            ],
            "ConstraintDescription": "Must be a valid t1, m1, or m2 EC2 instance type.",
            "Default": "t1.micro",
            "Description": "The AppServer instance type.",
            "Type": "String"
        },
        "Branch": {
            "Default": "master",
            "Description": "The git branch to deploy.",
            "Type": "String"
        },
        "TeamName": {
            "AllowedValues": [
                "Motley-Crew",
                "Team-Hytta",
                "Upvid",
                "Lab-App",
                "Suppr",
                "Compete",
                "Xup",
                "labapp",
                "LaPlaya",
                "BaconWindshield",
                "picShare",
                "Gradr"
            ],
            "ConstraintDescription": "Must exactly match your team name as shown in your Github URL.",
            "Description": "Your CS290 team name.",
            "Type": "String"
        }
    },
    "Resources": {
        "AppServer": {
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT5M"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "default": [
                            "root",
                            "perms",
                            "user"
                        ]
                    },
                    "perms": {
                        "commands": {
                            "update_permissions": {
                                "command": "chown -R ec2-user:ec2-user .",
                                "cwd": "/home/ec2-user/"
                            }
                        }
                    },
                    "root": {
                        "packages": {
                            "yum": {
                                "gcc-c++": [],
                                "git": [],
                                "make": [],
                                "mysql-devel": [],
                                "mysql-server": [],
                                "ruby21-devel": [],
                                "ImageMagick": []
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "mysqld": {
                                    "enabled": true,
                                    "ensureRunning": true
                                }
                            }
                        },
                        "sources": {
                            "/home/ec2-user/app": {
                                "Fn::Join": [
                                    "",
                                    [
                                        "https://github.com/scalableinternetservices/",
                                        {
                                            "Ref": "TeamName"
                                        },
                                        "/tarball/",
                                        {
                                            "Ref": "Branch"
                                        }
                                    ]
                                ]
                            }
                        }
                    },
                    "user": {
                        "files": {
                            "/home/ec2-user/app/config/database.yml": {
                                "content": "production:\n  adapter: mysql2\n  database: rails_app\n",
                                "group": "ec2-user",
                                "owner": "ec2-user"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": "ami-55a7ea65",
                "InstanceType": {
                    "Ref": "AppInstanceType"
                },
                "KeyName": {
                    "Ref": "TeamName"
                },
                "SecurityGroups": [
                    {
                        "Ref": "TeamName"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -v\nyum update -y aws-cfn-bootstrap\n# Helper function\nfunction error_exit {",
                                "\n    /opt/aws/bin/cfn-signal -e 1 -r \"$1\" --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "       --resource AppServer --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n    exit 1\n}",
                                "\n# Run cfn-init (see AWS::CloudFormation::Init)\n/opt/aws/bin/cfn-init -s ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " -r AppServer   --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                " || error_exit 'Failed to run cfn-init'\n",
                                "# Update alternatives\nalternatives --set ruby /usr/bin/ruby2.1\nalternatives --set gem /usr/bin/gem2.1\n# Install bundler only after the alternatives have been set.\ngem install bundle\n# Change to the app directory\ncd /home/ec2-user/app\n\n# Add environment variables to ec2-user's .bashrc\necho \"export RAILS_ENV=production\" >> ../.bashrc\necho \"export SECRET_KEY_BASE=b801783afb83bb8e614b32ccf6c05c855a927116d92062a75c6ffa61d58c58e62f13eb60cf1a31922c44b7e6a3e8f1809934a93llask938bl\" >> ../.bashrc\necho \"export PATH=/usr/local/bin:\\$PATH\" >> ../.bashrc\n\n# Redirect port 80 to port 3000 (ec2-user cannot bind port 80)\niptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 3000\n\n# Don't require tty to run sudo (the remaining commands)\nsed -i 's/requiretty/!requiretty/' /etc/sudoers\n\n# Run the remaining commands as the ec2-user in the app directory\nsudo -u ec2-user bash -lc \"bundle install --without test development\" || error_exit 'Failed to install bundle'\n# Create the database and run the migrations (try up to 10x)\nloop=10\nwhile [ $loop -gt 0 ]; do\n  sudo -u ec2-user bash -lc \"rake db:create db:migrate\"\n  if [ $? -eq 0 ]; then\n    loop=-1\n  else\n    sleep 6\n    loop=$(expr $loop - 1)\n  fi\ndone\nif [ $loop -eq 0 ]; then\n  error_exit 'Failed to execute database migration'\nfi\n# Run the app specific ec2 initialization\nif [ -f .ec2_initialize ]; then\n    sudo -u ec2-user bash -l .ec2_initialize     || error_exit 'Failed to run .ec2_initialize'\nfi\n# Fix multi_json gem version (>1.7.8 has issues precompiling assets)\necho -e \"\ngem 'multi_json', '1.7.8'\" >> Gemfile\nsudo -u ec2-user bash -lc \"bundle update multi_json\" || error_exit 'Failed to update multi_json'\n# Generate static assets\nsudo -u ec2-user bash -lc \"rake assets:precompile\" || error_exit 'Failed to precompile static assets'\n",
                                "# Configure the app to serve static assets\nsed -i 's/serve_static_assets = false/serve_static_assets = true/' config/environments/production.rb\n# Start up WEBrick (or whatever server is installed)\nsudo -u ec2-user bash -lc \"rails server -d\" || error_exit 'Failed to start rails server'\n",
                                "# All is well so signal success\n/opt/aws/bin/cfn-signal -e 0 --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource AppServer   --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        }
    }
}